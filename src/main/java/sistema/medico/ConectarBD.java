/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sistema.medico;

import Animacion.Fade;
import java.awt.Color;
import java.awt.Component;
import java.awt.MouseInfo;
import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListCellRenderer;
import javax.swing.DefaultListModel;
//import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JList;
//import sistema.alertas.Advertencia;
import sistema.alertas.Informacion;
//import sistema.util.Instancia;

/**
 *
 * @author Administrador
 */
public class ConectarBD extends javax.swing.JDialog {

    int x, y;
    public static boolean continuar = false;

    /**
     * Creates new form conectarAServidor
     */
    public ConectarBD(JFrame parent, boolean modal) {
        super(parent, modal);
        setUndecorated(true);
        initComponents();
        this.setLocationRelativeTo(parent);
        llenarListaDeConectores();
        setOpacity(0f);
        continuar=false;
        Fade.JDialogFadeIn(0f, 1f, 0.2f, 50, this);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btbCancelar = new javax.swing.JButton();
        etiquetaConexionServidor = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listConectores = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        btnAñadir1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        org.jdesktop.swingx.border.DropShadowBorder dropShadowBorderE = new org.jdesktop.swingx.border.DropShadowBorder();
        dropShadowBorderE .setShowRightShadow(true);
        dropShadowBorderE .setShowLeftShadow(true);
        dropShadowBorderE .setShowTopShadow(true);
        dropShadowBorderE .setShowBottomShadow(true);

        jPanel1.setBorder(dropShadowBorderE);
        jPanel1.setLayout(null);

        btbCancelar.setBackground(new java.awt.Color(0, 0, 153));
        btbCancelar.setFont(new java.awt.Font("Modern No. 20", 1, 18)); // NOI18N
        btbCancelar.setForeground(new java.awt.Color(255, 255, 255));
        btbCancelar.setText("Cancelar");
        btbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btbCancelarActionPerformed(evt);
            }
        });
        jPanel1.add(btbCancelar);
        btbCancelar.setBounds(380, 450, 130, 29);

        etiquetaConexionServidor.setFont(new java.awt.Font("Bookman Old Style", 0, 24)); // NOI18N
        etiquetaConexionServidor.setForeground(new java.awt.Color(0, 0, 102));
        etiquetaConexionServidor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        etiquetaConexionServidor.setText("<html><br>Conexión con la base de datos </html>");
        etiquetaConexionServidor.addMouseListener(new MouseAdapter(){
            @Override
            public void mousePressed(MouseEvent evt) {
                x = evt.getX();
                y = evt.getY();
            }
        });
        etiquetaConexionServidor.addMouseMotionListener(new MouseMotionAdapter(){
            @Override
            public void mouseDragged(MouseEvent evt) {
                Point point = MouseInfo.getPointerInfo().getLocation();
                setLocation(point.x - x, point.y - y);
            }
        });
        jPanel1.add(etiquetaConexionServidor);
        etiquetaConexionServidor.setBounds(0, -1, 540, 50);

        listConectores.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        DefaultListModel<String> modelo = new DefaultListModel<String>();
        listConectores.setModel(modelo);
        listConectores.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listConectores.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                listConectoresKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(listConectores);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(30, 110, 480, 320);

        jLabel3.setFont(new java.awt.Font("Bookman Old Style", 0, 18)); // NOI18N
        jLabel3.setText("Lista de conectores");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(30, 70, 310, 29);

        jSeparator3.setBackground(new java.awt.Color(0, 0, 153));
        jSeparator3.setForeground(new java.awt.Color(0, 0, 153));
        jSeparator3.setOpaque(true);
        jPanel1.add(jSeparator3);
        jSeparator3.setBounds(30, 100, 480, 2);

        btnAñadir1.setBackground(new java.awt.Color(0, 0, 153));
        btnAñadir1.setFont(new java.awt.Font("Modern No. 20", 1, 18)); // NOI18N
        btnAñadir1.setForeground(new java.awt.Color(255, 255, 255));
        btnAñadir1.setText("Aceptar");
        //btnAñadir.addActionListener(new Acciones());
        btnAñadir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAñadir1ActionPerformed(evt);
            }
        });
        btnAñadir1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnAñadir1KeyPressed(evt);
            }
        });
        jPanel1.add(btnAñadir1);
        btnAñadir1.setBounds(30, 450, 130, 29);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 507, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btbCancelarActionPerformed
        // this.dispose();
        Fade.JDialogFadeOut(1f, 0f, 0.2f, 50, this, Fade.DISPOSE);
    }//GEN-LAST:event_btbCancelarActionPerformed

    //codigo para seleccionar un jar que seria el conector de cualquier base de datos
    // por si en un futuro se desea que el programa se concecte a cualquier base de datos
   /*  private void multipleBD() {
        File existe;
        String ruta;
        JFileChooser fileChooser = ((test) Instancia.getInstancia("medico.test")).abrirChooser("Archivos JAR (*.jar)", "jar", "NUEVO CONECTOR");
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            ruta = fileChooser.getSelectedFile().toString();
            int c = ruta.lastIndexOf("\\");
            ruta = "ruta" + ruta.substring(c);
            existe = new File(ruta);
            ((test) Instancia.getInstancia("medico.test")).setLookAndFeel();
            if (existe.exists()) {
                Advertencia a = new Advertencia(this, true, "YA EXISTE UN ARCHIVO CON ESE NOMBRE ¿DESEA REEMPLAZARLO?");
                a.setVisible(true);
                if (Advertencia.continuar) {
                    RespaldarYRestaurarBD.copyFile(fileChooser.getSelectedFile().toString(), existe.toString());
                }
            } else {
                RespaldarYRestaurarBD.copyFile(fileChooser.getSelectedFile().toString(), existe.toString());
            }
            llenarListaDeConectores();
        }
    } */
    private void conectar(){
         Properties p = new Properties();
        try {
            p.load(new FileReader("/home/luis/mvn/medical-system/src/main/resources/config.properties"));
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ConectarBD.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ConectarBD.class.getName()).log(Level.SEVERE, null, ex);
        }
         if (listConectores.getSelectedValue() == null) {
            new sistema.alertas.Error(this, true, "\n DEBE SELECCIONAR UN CONECTOR ").setVisible(true);
        } else {
            String isConected = p.getProperty(listConectores.getSelectedValue());
            if (isConected.equals("true")) {
                new Informacion(this, true, "\n YA ESTAS CONECTADO A ESTE GESTOR DE BASE DE DATOS").setVisible(true);
            } else {
                new DatosConexion(this, true, listConectores.getSelectedValue()).setVisible(true);
                if (DatosConexion.continuar) {
                    continuar = true;
                    Fade.JDialogFadeOut(1f, 0f, 0.2f, 50, this, Fade.DISPOSE);
                }
            }
        }
    }
    private void btnAñadir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAñadir1ActionPerformed
       conectar();
    }//GEN-LAST:event_btnAñadir1ActionPerformed

    private void btnAñadir1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnAñadir1KeyPressed
        if(evt.getKeyCode()== java.awt.event.KeyEvent.VK_ENTER){
            conectar();
        }
    }//GEN-LAST:event_btnAñadir1KeyPressed

    private void listConectoresKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_listConectoresKeyPressed
        if(evt.getKeyCode()==java.awt.event.KeyEvent.VK_ENTER){
            conectar();
        }
    }//GEN-LAST:event_listConectoresKeyPressed

    private void llenarListaDeConectores() {
        DefaultListModel<String> modelo = (DefaultListModel<String>) listConectores.getModel();
        listConectores.setCellRenderer(new IconListRenderer());
        modelo.removeAllElements();
        File carpeta = new File("/home/luis/mvn/medical-system/src/main/resources/conectores a base de datos");
        String[] listado = carpeta.list();
        if (listado != null || (listado!=null && listado.length != 0)) {
            for (String listado1 : listado) {
                modelo.addElement(listado1);
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConectarBD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            ConectarBD dialog = new ConectarBD(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btbCancelar;
    public javax.swing.JButton btnAñadir1;
    private javax.swing.JLabel etiquetaConexionServidor;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JList<String> listConectores;
    // End of variables declaration//GEN-END:variables
}
class IconListRenderer extends DefaultListCellRenderer {

        @Override
        public Component getListCellRendererComponent(
                JList<?> list, Object value, int index,
                boolean isSelected, boolean cellHasFocus) {
            JLabel label = (JLabel) super.getListCellRendererComponent(
                    list, value, index, isSelected, cellHasFocus);
            if (isSelected) {
                label.setOpaque(true);
                label.setBackground(Color.BLACK);
                label.setForeground(Color.WHITE);
            }
            label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/alertas/7.png")));
            return label;
        }

    }