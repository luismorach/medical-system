/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sistema.medico;

import Animacion.Fade;
import java.awt.MouseInfo;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.util.Enumeration;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import sistema.alertas.Advertencia;
import sistema.alertas.Hecho;
import sistema.database.BaseDeDatos;

/**
 *
 * @author Administrador
 */
public class DatosConexion extends javax.swing.JDialog {

    /**
     * Creates new form DatosConexion
     */
    int x, y;
    String conector;
    public static boolean continuar = false;

    public DatosConexion(JDialog parent, boolean modal, String conector) {
        super(parent, modal);
        this.conector = conector;
        setUndecorated(true);
        initComponents();
        this.setLocationRelativeTo(parent);
        setOpacity(0f);
        continuar = false;
        Fade.JDialogFadeIn(0f, 1f, 0.2f, 50, this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    @SuppressWarnings("static-access")
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btbCancelar = new javax.swing.JButton();
        btnAceptar = new javax.swing.JButton();
        etiquetaNombreBD = new javax.swing.JLabel();
        entradaNombreBD = new javax.swing.JTextField();
        etiquetaPuertoBD = new javax.swing.JLabel();
        entradaPuertoBD = new javax.swing.JTextField();
        etiquetaUserBD = new javax.swing.JLabel();
        entradaUserBD = new javax.swing.JTextField();
        etiquetaHostBD = new javax.swing.JLabel();
        entradaHostBD = new javax.swing.JTextField();
        etiquetaPassBD = new javax.swing.JLabel();
        entradaPassBD = new javax.swing.JPasswordField();
        etiquetaConexionServidor = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        org.jdesktop.swingx.border.DropShadowBorder dropShadowBorderE = new org.jdesktop.swingx.border.DropShadowBorder();
        dropShadowBorderE .setShowRightShadow(true);
        dropShadowBorderE .setShowLeftShadow(true);
        dropShadowBorderE .setShowTopShadow(true);
        dropShadowBorderE .setShowBottomShadow(true);

        jPanel1.setBorder(dropShadowBorderE);
        jPanel1.setLayout(null);

        btbCancelar.setBackground(new java.awt.Color(0, 0, 153));
        btbCancelar.setFont(new java.awt.Font("Modern No. 20", 1, 18)); // NOI18N
        btbCancelar.setForeground(new java.awt.Color(255, 255, 255));
        btbCancelar.setText("Cancelar");
        btbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btbCancelarActionPerformed(evt);
            }
        });
        jPanel1.add(btbCancelar);
        btbCancelar.setBounds(310, 450, 210, 29);

        btnAceptar.setBackground(new java.awt.Color(0, 0, 153));
        btnAceptar.setFont(new java.awt.Font("Modern No. 20", 1, 18)); // NOI18N
        btnAceptar.setForeground(new java.awt.Color(255, 255, 255));
        btnAceptar.setText("Aceptar");
        //btnAÃ±adir.addActionListener(new Acciones());
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });
        btnAceptar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnAceptarKeyPressed(evt);
            }
        });
        jPanel1.add(btnAceptar);
        btnAceptar.setBounds(30, 450, 220, 29);

        etiquetaNombreBD.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        etiquetaNombreBD.setText("Nombre de la base de datos");
        etiquetaNombreBD.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        etiquetaNombreBD.setFocusable(false);
        jPanel1.add(etiquetaNombreBD);
        etiquetaNombreBD.setBounds(30, 134, 200, 20);

        entradaNombreBD.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        entradaNombreBD.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(180, 180, 180)));
        entradaNombreBD.addFocusListener(new EscucharBotones().focus(etiquetaNombreBD,0,0,153));
        entradaNombreBD.addKeyListener(new EscucharBotones.AccionesTxt("texto"));
        entradaNombreBD.addActionListener(new AccionesTxt());
        /*
        entradaNombreBD.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                entradaNombreBDFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                entradaNombreBDFocusLost(evt);
            }
        });
        entradaNombreBD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                entradaNombreBDMouseClicked(evt);
            }
        });
        entradaNombreBD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entradaNombreBDActionPerformed(evt);
            }
        });
        */
        jPanel1.add(entradaNombreBD);
        entradaNombreBD.setBounds(30, 140, 220, 24);

        etiquetaPuertoBD.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        etiquetaPuertoBD.setText("Puerto");
        etiquetaPuertoBD.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        etiquetaPuertoBD.setFocusable(false);
        jPanel1.add(etiquetaPuertoBD);
        etiquetaPuertoBD.setBounds(300, 134, 200, 20);

        entradaPuertoBD.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        entradaPuertoBD.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(180, 180, 180)));
        entradaPuertoBD.addFocusListener(new EscucharBotones().focus(etiquetaPuertoBD,0,0,153));
        entradaPuertoBD.addKeyListener(new EscucharBotones.AccionesTxt("numerico"));
        entradaPuertoBD.addActionListener(new AccionesTxt());
        /*
        entradaPuertoBD.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                entradaPuertoBDFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                entradaPuertoBDFocusLost(evt);
            }
        });
        entradaPuertoBD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                entradaPuertoBDMouseClicked(evt);
            }
        });
        entradaPuertoBD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entradaPuertoBDActionPerformed(evt);
            }
        });
        */
        jPanel1.add(entradaPuertoBD);
        entradaPuertoBD.setBounds(300, 140, 220, 24);

        etiquetaUserBD.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        etiquetaUserBD.setText("Usuario");
        etiquetaUserBD.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        etiquetaUserBD.setFocusable(false);
        jPanel1.add(etiquetaUserBD);
        etiquetaUserBD.setBounds(30, 244, 200, 20);

        entradaUserBD.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        entradaUserBD.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(180, 180, 180)));
        entradaUserBD.addFocusListener(new EscucharBotones().focus(etiquetaUserBD,0,0,153));
        entradaUserBD.addKeyListener(new EscucharBotones.AccionesTxt("texto"));
        entradaUserBD.addActionListener(new AccionesTxt());
        
        jPanel1.add(entradaUserBD);
        entradaUserBD.setBounds(30, 250, 220, 24);

        etiquetaHostBD.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        etiquetaHostBD.setText("Host");
        etiquetaHostBD.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        etiquetaHostBD.setFocusable(false);
        jPanel1.add(etiquetaHostBD);
        etiquetaHostBD.setBounds(300, 244, 200, 20);

        entradaHostBD.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        entradaHostBD.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(180, 180, 180)));
        entradaHostBD.addFocusListener(new EscucharBotones().focus(etiquetaHostBD,0,0,153));
        entradaHostBD.addActionListener(new AccionesTxt());
        
        jPanel1.add(entradaHostBD);
        entradaHostBD.setBounds(300, 250, 220, 24);

        etiquetaPassBD.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        etiquetaPassBD.setText("ContraseÃ±a");
        jPanel1.add(etiquetaPassBD);
        etiquetaPassBD.setBounds(125, 354, 120, 20);

        entradaPassBD.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        entradaPassBD.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(180, 180, 180)));
        entradaPassBD.setOpaque(false);
        entradaPassBD.addFocusListener(new EscucharBotones().focus(etiquetaPassBD,0,0,153));
        entradaPassBD.addActionListener(new AccionesTxt());
        entradaPassBD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                entradaPassBDMouseClicked(evt);
            }
        });
        entradaPassBD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entradaPassBDActionPerformed(evt);
            }
        });
        entradaPassBD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                entradaPassBDKeyPressed(evt);
            }
        });
        jPanel1.add(entradaPassBD);
        entradaPassBD.setBounds(125, 360, 290, 24);

        etiquetaConexionServidor.setFont(new java.awt.Font("Bookman Old Style", 0, 24)); // NOI18N
        etiquetaConexionServidor.setForeground(new java.awt.Color(0, 0, 102));
        etiquetaConexionServidor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        etiquetaConexionServidor.setText("<html><br>Datos de la conexiÃ³n </html>");
        etiquetaConexionServidor.addMouseListener(new MouseAdapter(){
            @Override
            public void mousePressed(MouseEvent evt) {
                x = evt.getX();
                y = evt.getY();
            }
        });
        etiquetaConexionServidor.addMouseMotionListener(new MouseMotionAdapter(){
            @Override
            public void mouseDragged(MouseEvent evt) {
                Point point = MouseInfo.getPointerInfo().getLocation();
                setLocation(point.x - x, point.y - y);
            }
        });
        jPanel1.add(etiquetaConexionServidor);
        etiquetaConexionServidor.setBounds(0, -1, 540, 50);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 514, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btbCancelarActionPerformed
        // this.dispose();
        Fade.JDialogFadeOut(1f, 0f, 0.2f, 50, this, Fade.DISPOSE);
    }//GEN-LAST:event_btbCancelarActionPerformed

    private void conexion(){
        Properties p = new Properties();
        Properties c = new Properties();
        File archivo = new File("/home/luis/mvn/medical-system/src/main/resources/conexion.properties");
        FileOutputStream out;
        int control = 0;

        try {
            RespaldarYRestaurarBD.crearRespaldo("data.dat",false).join();
        } catch (InterruptedException ex) {
            Logger.getLogger(DatosConexion.class.getName()).log(Level.SEVERE, null, ex);
        }

        if (conector.equals("sqlite-jdbc-3.27.2.1.jar")) {
            if (entradaNombreBD.getText().equals("")) {
                new sistema.alertas.Error(this, true, "\n EL NOMBRE ES REQUERIDO").setVisible(true);
                control = 1;
            } else {
                BaseDeDatos.conexion = null;
                String url = "jdbc:sqlite:" + entradaNombreBD.getText() + ".db";
                p.setProperty("url", url);
                p.setProperty("driver", "org.sqlite.JDBC");
                p.setProperty("pwd", "");
                p.setProperty("usr", "");
                try {
                    out = new FileOutputStream(archivo);
                    p.store(out, "config");
                    out.close();
                } catch (IOException ex) {
                    Logger.getLogger(DatosConexion.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else {
            if (entradaNombreBD.getText().equals("") || entradaPuertoBD.getText().equals("")
                    || entradaUserBD.getText().equals("") || entradaPassBD.getPassword().toString().equals("")
                    || entradaHostBD.getText().equals("")) {
                new sistema.alertas.Error(this, true, "\n TODOS LOS CAMPOS SON REQUERIDOS").setVisible(true);
                control = 1;
            } else {
                try {
                    BaseDeDatos.conexion = null;
                    if (conector.equals("postgresql-9.4.1209.jar")) {
                        String url = "jdbc:postgresql://" + entradaHostBD.getText()
                                + ":" + entradaPuertoBD.getText() + "/" + entradaNombreBD.getText();
                        if (BaseDeDatos.getConexion("org.postgresql.Driver", url, entradaUserBD.getText(),
                                entradaPassBD.getPassword().toString()) == null) {
                            new sistema.alertas.Error(this, true, " NO SE PUDO ESTABLECER LA CONEXION VERIFIQUE LOS DATOS").setVisible(true);
                            control = 1;
                        } else {
                            out = new FileOutputStream(archivo);
                            p.setProperty("url", url);
                            p.setProperty("driver", "org.postgresql.Driver");
                            p.setProperty("pwd", entradaPassBD.getPassword().toString());
                            p.setProperty("usr", entradaUserBD.getText());
                            p.store(out, "config");
                            out.close();

                        }
                    }
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(DatosConexion.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(DatosConexion.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }

        if (control == 0) {
            try {
                c.load(new FileReader("/home/luis/mvn/medical-system/src/main/resources/config.properties"));
                Enumeration<Object> keys = c.keys();

                while (keys.hasMoreElements()) {
                    Object key = keys.nextElement();
                    if (c.get(key).equals("true")) {
                        c.setProperty(key.toString(), "false");
                    }
                }
                c.setProperty(conector, "true");
                c.store(new FileOutputStream("/home/luis/mvn/medical-system/src/main/resources/config.properties"), "config");
                new Advertencia(this, true, "SE HA CONECTADO A UNA NUEVA BASE DE DATOS. DESEA MIGRAR LOS DATOS A ESTA NUEVA BASE DE DATOS").setVisible(true);
                if (Advertencia.continuar) {
                    RespaldarYRestaurarBD.restaurar("data.dat");
                    new Respaldo(this, true,"migrar").setVisible(true);
                    
                } else {
                    BaseDeDatos.crearTablas();
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(DatosConexion.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(DatosConexion.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            continuar = true;
            new Hecho(this, true).setVisible(true);
            Fade.JDialogFadeOut(1f, 0f, 0.2f, 50, this, Fade.DISPOSE);

        }
    }
    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        conexion();
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void entradaPassBDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_entradaPassBDMouseClicked
        entradaPassBD.setText("");
    }//GEN-LAST:event_entradaPassBDMouseClicked

    private void entradaPassBDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entradaPassBDActionPerformed
        
    }//GEN-LAST:event_entradaPassBDActionPerformed

    private void btnAceptarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnAceptarKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            conexion();
        }
    }//GEN-LAST:event_btnAceptarKeyPressed

    private void entradaPassBDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_entradaPassBDKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_entradaPassBDKeyPressed

    class AccionesTxt implements ActionListener{

        @Override
        public void actionPerformed(ActionEvent ae) {
            conexion();
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DatosConexion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            DatosConexion dialog = new DatosConexion(new javax.swing.JDialog(), true, "");
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btbCancelar;
    public javax.swing.JButton btnAceptar;
    private javax.swing.JTextField entradaHostBD;
    private javax.swing.JTextField entradaNombreBD;
    private javax.swing.JPasswordField entradaPassBD;
    private javax.swing.JTextField entradaPuertoBD;
    private javax.swing.JTextField entradaUserBD;
    private javax.swing.JLabel etiquetaConexionServidor;
    private javax.swing.JLabel etiquetaHostBD;
    private javax.swing.JLabel etiquetaNombreBD;
    private javax.swing.JLabel etiquetaPassBD;
    private javax.swing.JLabel etiquetaPuertoBD;
    private javax.swing.JLabel etiquetaUserBD;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
