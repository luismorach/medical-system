/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sistema.medico;

import Animacion.Fade;
import java.awt.Dimension;
import java.awt.Toolkit;
import javax.swing.JDialog;
import javax.swing.JFrame;
import sistema.alertas.DesktopNotify;

/**
 *
 * @author Administrador
 */
public class Respaldo extends JDialog {

    String tipo;
    JFrame parent;
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
    /**
     * Creates new form CargandoRespaldo
     *
     * @param modal
     */
    public Respaldo() {

    }

    @SuppressWarnings("static-access")
    public Respaldo(JDialog parent, boolean modal, String tipo) {
        super(parent, modal);
        System.out.println(screenSize);
        this.tipo = tipo;
        setUndecorated(true);
        initComponents();

        
        setBounds(0, 0, screenSize.width, screenSize.height);
        setOpacity(0.9f);
        this.setLocationRelativeTo(parent);
        this.progreso.setVisible(false);

        if (tipo.equals("crear")) {
            Respaldo.msj.setText("<html>Creando respaldo de la base de datos.<br><center> Espere un momento..... </html>");
        }
        if (tipo.equals("migrar")) {
            Respaldo.msj.setText("<html>Migrando datos de la base de datos.<br><center> Espere un momento..... </html>");
        }
    }

    @SuppressWarnings("static-access")
    public Respaldo(JFrame parent, boolean modal, String tipo) {
        super(parent, modal);
        System.out.println(screenSize);
        this.tipo = tipo;
        this.parent=parent;
        setUndecorated(true);
        initComponents();

        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        setBounds(0, 0, screenSize.width, screenSize.height);
        setOpacity(0.9f);
        this.setLocationRelativeTo(parent);
        this.progreso.setVisible(false);

        if (tipo.equals("crear")) {
            Respaldo.msj.setText("<html>Creando respaldo de la base de datos.<br><center> Espere un momento..... </html>");
        }
        if (tipo.equals("migrar")) {
            Respaldo.msj.setText("<html>Migrando datos de la base de datos.<br><center> Espere un momento..... </html>");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        progreso = new javax.swing.JProgressBar();
        jPanel1 = new javax.swing.JPanel();
        icono = new javax.swing.JLabel();
        msj = new javax.swing.JLabel();
        porcentaje = new javax.swing.JLabel();

        progreso.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                progresoStateChanged(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setLayout(null);

        icono.setBackground(new java.awt.Color(51, 51, 51));
        icono.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        icono.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/carga.gif"))); // NOI18N
        jPanel1.add(icono);
        icono.setBounds(0, 0,screenSize.width, screenSize.height-150);
        
        porcentaje.setBackground(new java.awt.Color(51, 51, 51));
        porcentaje.setFont(new java.awt.Font("Bookman Old Style", 1, 36)); // NOI18N
        porcentaje.setForeground(new java.awt.Color(255, 255, 255));
        porcentaje.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        porcentaje.setText("0%");
        jPanel1.add(porcentaje);
        porcentaje.setBounds(0, 0, screenSize.width, screenSize.height-150);

        msj.setBackground(new java.awt.Color(51, 51, 51));
        msj.setFont(new java.awt.Font("Bookman Old Style", 1, 36)); // NOI18N
        msj.setForeground(new java.awt.Color(255, 255, 255));
        msj.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        msj.setText("Restaurando respaldo de la base de datos...");
        jPanel1.add(msj);
        msj.setBounds(0, screenSize.height/3, screenSize.width, screenSize.height);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1002, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 627, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void progresoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_progresoStateChanged
        porcentaje.setText(progreso.getValue()+"%");
        if (tipo.equals("cargar")) {
            if (progreso.getValue() == 30) {
                Respaldo.msj.setText("Descomprimiendo respaldo...");
            }
            if (progreso.getValue() == 75) {
                Respaldo.msj.setText("Espere un momento...");
            }
            if (progreso.getValue() == 92) {
                //            this.icono.setIcon(new ImageIcon(getClass().getResource("/HerrBD/Completo.png")));
                Respaldo.msj.setText("Restauración completada.");
            }
            if (progreso.getValue() == 100) {
                this.dispose();
                DesktopNotify.showDesktopMessage("Restaurar respaldo...", "Se ha restaurado la base de datos a una fecha anterior, puede que la información"
                        + " ya no sea la misma.", DesktopNotify.INFORMATION, 8000);
                Fade.JFrameFadeOut(1f, 0f, 0.2f, 50, parent, Fade.DISPOSE);
                new Login().setVisible(true);
            }
        } else if (tipo.equals("migrar")) {
            Respaldo.msj.setText("<html>Migrando datos de la base de datos.<br><center> Espere un momento..... </html>");
            if (progreso.getValue() == 100) {
                this.dispose();
                DesktopNotify.showDesktopMessage("MIGRAR DATA...", "Los datos se han migrado satisfactoriamente.",
                        DesktopNotify.INFORMATION, 8000);
            }
        } else {
            if (progreso.getValue() == 100) {
                this.dispose();
                DesktopNotify.showDesktopMessage("CREAR RESPALDO...", "Se ha generado un nuevo respaldo de la base de datos.",
                        DesktopNotify.INFORMATION, 8000);
            }
        }
    }//GEN-LAST:event_progresoStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        new cargarRestore(null, "crear");
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Respaldo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Respaldo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Respaldo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Respaldo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        //java.awt.EventQueue.invokeLater(new cargarRestore(null,"")::start //Respaldo dialog = new Respaldo(new javax.swing.JFrame(), true,"");
        /* dialog.addWindowListener(new java.awt.event.WindowAdapter() {
        @Override
        public void windowClosing(java.awt.event.WindowEvent e) {
        System.exit(0);
        }
        });
        dialog.setVisible(true);*/
        //);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel icono;
    private javax.swing.JPanel jPanel1;
    public static javax.swing.JLabel msj;
    public static javax.swing.JLabel porcentaje;
    public static javax.swing.JProgressBar progreso;
    // End of variables declaration//GEN-END:variables

}

class cargarRestore implements Runnable {

    JFrame parent = null;
    String tipo;

    public cargarRestore(JFrame parent, String tipo) {
        this.parent = parent;
        this.tipo = tipo;
        iniciar();
    }

    public Thread iniciar() {
        Thread hilo = new Thread(this);
        hilo.start();
        return hilo;
    }

    @Override
    public void run() {
        Respaldo obj;
        obj = new Respaldo(parent, true, tipo);
        obj.setVisible(true);
    }
}
